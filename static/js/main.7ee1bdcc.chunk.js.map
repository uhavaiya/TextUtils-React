{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","placeholder","rows","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","Alert","capitalize","word","lower","charAt","slice","alert","role","msg","App","setMode","setAlert","message","setTimeout","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7ee1bdcc.chunk.js","sourcesContent":["import React from 'react'\r\n// import { NavLink } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div >\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nfunction TextForm(props) {\r\n    const handleUpCase = () => {\r\n        // const newText = text.toUpperCase()\r\n        setText(text.toUpperCase())\r\n        props.showAlert(\"converted to upperCase!\", \"success\")\r\n    }\r\n    const handleLoCase = () => {\r\n        setText(text.toLowerCase())\r\n        props.showAlert(\"converted to lowerCase!\", \"success\")\r\n\r\n    }\r\n    const handleclear = () => {\r\n        setText(\" \")\r\n    }\r\n\r\n    const handelOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const [text, setText] = useState()\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\">\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea value={text} onChange={handelOnChange} className=\"form-control\" placeholder=\"Enter your text\" id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpCase}>Convert to UpperCase </button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLoCase}>Convert to LowerCase </button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleclear}>Clear Text </button>\r\n                <button className=\"btn btn-primary\" onClick={handleCopy}>Copy Text </button>\r\n            </div>\r\n            <div className=\"container \">\r\n                <h1>Your Text Summary</h1>\r\n                {/* <p>{text.split(\" \").length} words and characters {text.length}</p> */}\r\n                <h2>Privew </h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextForm\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {capitalize(props.alert.msg)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './component/About';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"gray\"\n      showAlert(\"Dark mode has been enable\", \"success\")\n      document.title = \"TextUtils Dark Mode\"\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"Light mode has been enable\", \"success\")\n      document.title = \"TextUtils Light Mode\"\n\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      {/* <Switch> */}\n      {/* <Route exact path=\"/about\" component={About}> */}\n      {/* <About /> */}\n      {/* </Route> */}\n      {/* <Route exact path=\"/\"> */}\n      <TextForm showAlert={showAlert} heading=\"Enter the text here\" mode={mode} />\n      {/* </Route> */}\n      {/* </Switch> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}